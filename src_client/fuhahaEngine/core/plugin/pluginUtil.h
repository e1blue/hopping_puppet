#pragma once

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

// コールバック識別子
typedef int pluginUtilCallbackId;

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------
// -------- ゲーム側で実装 主にゲーム側から呼び出す

// 揮発性一時バッファ 返値領域は解放禁止
void *corePluginUtilMemoryTemporary(size_t size);

// ----------------------------------------------------------------

// コールバック関数の登録 ひな形
pluginUtilCallbackId corePluginUtilCallbackSet(void *param, void *callback);
// コールバック関数の取得と解放 ひな形
void *corePluginUtilCallbackGet(pluginUtilCallbackId callbackId, void **param, bool isFree);

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------
// -------- ゲーム側で実装 主にプラットフォーム側から呼び出す

// 領域確保mallocラッパ
void *gamePluginUtilMemoryMalloc(char *info, size_t size);
// 領域確保callocラッパ
void *gamePluginUtilMemoryCalloc(char *info, size_t n, size_t size);

// url取得 返値文字列は揮発性バッファで解放禁止
char *gamePluginUtilUrlGet(void);

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------
// -------- プラットフォーム側で実装 主にゲーム側から呼び出す

// プラットフォーム名取得 返値文字列は揮発性バッファで解放禁止
char *platformPluginUtilPlatformGet(void);
// ユーザーID取得 返値文字列は揮発性バッファで解放禁止
char *platformPluginUtilUidGet(void);

// unix時間取得
int64_t platformPluginUtilTimeGet(void);

// 読み込み中確認
bool platformPluginUtilIsLoading(void);

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------
// -------- プラットフォーム側で実装 主にプラットフォーム側から呼び出す

// 読み込み中カウンタ加算
void nativePluginUtilLoadingIncrement(void);
// 読み込み中カウンタ減算
void nativePluginUtilLoadingDecrement(void);

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

