
// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

buildscript{
	repositories{jcenter()}
	dependencies{classpath("com.android.tools.build:gradle-experimental:0.7.0-alpha5")}
}

allprojects{
	repositories{jcenter()}
}

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

defaultTasks 'assembleDebug'
//defaultTasks 'assembleRelease'

task(wrapper, type: Wrapper){gradleVersion = "2.10"}

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

gradle.projectsEvaluated{
	tasks.withType(JavaCompile){
		options.compilerArgs << "-Xlint:deprecation"
	}
}

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

apply plugin: "com.android.model.application"

project.ext.fuhahaApplicationId = "com.totetero.hopping"
project.ext.fuhahaVersionCode = 8
project.ext.fuhahaVersionName = "1.4.0"

model{
	android{
		compileSdkVersion = 23
		buildToolsVersion = "23.0.2"

		defaultConfig.with{
			applicationId = project.ext.fuhahaApplicationId
			versionCode = project.ext.fuhahaVersionCode
			versionName = project.ext.fuhahaVersionName
			minSdkVersion.apiLevel = 9
			targetSdkVersion.apiLevel = 23
		}
	}

	android.buildTypes{
		debug{
			applicationIdSuffix = ".debug"
		}
		release{
			minifyEnabled = false
			proguardFiles.add(file("proguard-rules.pro"))
			signingConfig = $("android.signingConfigs.signRelease")
		}
	}

	android.sources{
		main{
			java.source{
				srcDir("src")
				srcDir("../fuhahaEngine/android")
				srcDir("../main/android")
			}
			jni.source{
				srcDir("../fuhahaEngine/android")
				srcDir("../fuhahaEngine/core")
				srcDir("../main/android")
				srcDir("../main/core")
				srcDir("../../src_data/core")
			}
			manifest.source{
				srcDir("src")
			}
			res.source{
				srcDir("src/res")
			}
			assets.source{
				srcDir("assets")
			}
		}
	}

	android.ndk{
		moduleName = "fuhaha_native"
		CFlags.add("-std=c99")
		CFlags.add("-I${project.buildDir}/../../fuhahaEngine/android".toString())
		CFlags.add("-I${project.buildDir}/../../fuhahaEngine/core".toString())
		CFlags.add("-I${project.buildDir}/../../main/android".toString())
		CFlags.add("-I${project.buildDir}/../../main/core".toString())
		ldLibs.addAll(["log", "GLESv2"])
		stl = "gnustl_static"
	}

	android.productFlavors{
		//create("arm"){ndk.abiFilters.add("armeabi")}
		//create("arm7"){ndk.abiFilters.add("armeabi-v7a")}
		//create("arm8"){ndk.abiFilters.add("arm64-v8a")}
		//create("x86"){ndk.abiFilters.add("x86")}
		//create("x86-64"){ndk.abiFilters.add("x86_64")}
		//create("mips"){ndk.abiFilters.add("mips")}
		//create("mips-64"){ndk.abiFilters.add("mips64")}
		create("all")
	}

	android.signingConfigs{
		create("signRelease"){
			storeFile = file(productKeystore)
			keyAlias = productKeyAlias
			storePassword = productKeyPass
			keyPassword = productAliasPassword
		}
	}

	android.lintOptions{
		abortOnError(false)
	}
}

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

dependencies{
	compile("com.google.android.gms:play-services:6.+")
}

// ----------------------------------------------------------------
// ----------------------------------------------------------------
// ----------------------------------------------------------------

